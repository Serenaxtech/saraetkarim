<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/> 
    <title>My Profile</title>

    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Dancing+Script:wght@600&family=Leko:wght@400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css">

    <style>
        :root {
            --brown-dark: #452F22;
            --brown-medium: #5C3A28;
            --brown-light: #A48464;
            --cream: #F5E9D5;
            --background: #A48464;

            --font-heading: 'Dancing Script', cursive;
            --font-body: 'Leko', sans-serif;
        }

        body {
            margin: 0;
            padding: 0;
            background-color: var(--background);
            font-family: var(--font-body);
            color: var(--brown-dark);
        }

        .profile-body {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: flex-start;
            min-height: 100vh;
        }

        header {
            padding: 2rem;
            text-align: center;
        }

        header h1 {
            font-family: var(--font-heading);
            font-size: 3rem;
            color: var(--brown-dark);
            margin-bottom: 0.5rem;
        }

        header p {
            font-family: var(--font-body);
            font-size: 1rem;
            color: var(--brown-dark);
            margin: 0;
        }

        .profile-container {
            background: var(--cream);
            border-radius: 10px;
            padding: 2rem;
            max-width: 500px;
            width: 90%;
            box-shadow: 0 4px 10px rgba(0,0,0,0.2);
            margin-bottom: 2rem;
        }

        h2 {
            font-family: var(--font-heading);
            font-size: 2rem;
            margin-bottom: 1rem;
            text-align: center;
        }

        .info-display {
            border: 1px solid var(--brown-light);
            border-radius: 5px;
            padding: 1rem;
            margin-bottom: 2rem;
            background: #fff;
        }

        .info-display p {
            margin: 0.5rem 0;
            font-size: 1rem;
            font-weight: 600;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-group label {
            display: block;
            font-family: var(--font-body);
            margin-bottom: 0.5rem;
            font-weight: 700;
            color: var(--brown-dark);
        }

        .form-group input {
            width: 100%;
            padding: 0.75rem;
            border-radius: 5px;
            border: 2px solid var(--brown-medium);
            font-family: var(--font-body);
            outline: none;
            font-size: 1rem;
            color: var(--brown-dark);
        }

        .form-group input:focus {
            border-color: var(--brown-dark);
        }

        .btn-submit {
            display: inline-block;
            background-color: var(--brown-dark);
            color: var(--cream);
            padding: 0.75rem 1.5rem;
            text-decoration: none;
            font-weight: 700;
            font-family: var(--font-body);
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background 0.3s ease;
            width: 100%;
            text-align: center;
            margin-top: 1rem;
        }

        .btn-submit:hover {
            background-color: var(--brown-medium);
        }

        .btn-delete {
            display: inline-block;
            background-color: #a40000; /* Deep red for warning */
            color: var(--cream); /* Matches the cream color for text contrast */
            padding: 0.75rem 1.5rem;
            text-decoration: none;
            font-weight: 700;
            font-family: var(--font-body);
            border: none;
            border-radius: 8px; /* Slightly larger border radius for emphasis */
            cursor: pointer;
            transition: background-color 0.3s ease, transform 0.2s ease;
            width: 100%; /* Ensure consistency with other buttons */
            text-align: center;
            margin-top: 1rem;
        }

        .btn-delete:hover {
            background-color: #8a0000; /* Slightly darker red for hover effect */
            transform: scale(1.02); /* Subtle hover scaling effect */
        }

        .btn-delete:active {
            background-color: #6e0000; /* Even darker red for active state */
            transform: scale(0.98); /* Pressed-in effect */
        }

        /* Notification Styles */
        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            background-color: var(--brown-medium);
            color: var(--cream);
            padding: 1rem 2rem;
            border-radius: 10px;
            box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
            font-size: 1rem;
            z-index: 1000;
            animation: fadeIn 0.5s ease-out, fadeOut 0.5s ease-in 3.5s forwards;
        }

        .notification.success {
            background-color: var(--brown-light);
        }

        .notification.error {
            background-color: #a40000;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(-10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes fadeOut {
            from {
                opacity: 1;
                transform: translateY(0);
            }
            to {
                opacity: 0;
                transform: translateY(-10px);
            }
        }
    </style>
    <link rel="stylesheet" href="/css/navbar_style.css">
</head>
<body>
    <!-- Navigation Bar Section -->
    <%- include('../partials/navbar') %>

    <div class="profile-body">
        <header>
            <h1>My Profile</h1>
        </header>
        
        <div id="notification" class="notification" style="display: none;">
            <p id="notificationMessage"></p>
        </div>
    
        <div class="profile-container">
            <!-- User information -->
            <div class="info-display" id="userInfo">
                <p><strong>Full Name:</strong> <span id="displayName"></span></p>
                <p><strong>Email:</strong> <span id="displayEmail"></span></p>
                <p><strong>Phone:</strong> <span id="displayNumber"></span></p>
            </div>
    
            <!-- Update form -->
            <h2>Update Profile</h2>
            <form id="profileForm">
                <div class="form-group">
                    <label for="name">Full Name</label>
                    <input type="text" id="name" name="name" required />
                </div>
                <div class="form-group">
                    <label for="email">Email</label>
                    <input type="email" id="email" name="email" required />
                </div>
                <div class="form-group">
                    <label for="number">Phone Number</label>
                    <input type="text" id="number" name="number" required />
                </div>
                <button class="btn-submit" type="submit">Update</button>
            </form>
    
            <div class="section-divider"></div>
    
            <!-- Delete account form -->
            <h2>Delete Account</h2>
            <p>Enter your password to confirm account deletion. This action is irreversible.</p>
            <form id="deleteForm">
                <div class="form-group">
                    <label for="deletePassword">Password</label>
                    <input type="password" id="deletePassword" name="deletePassword" required />
                </div>
                <button class="btn-delete" type="submit">Delete Account</button>
            </form>
        </div>
    </div>

    <script>
        const BASE_URL = 'http://localhost:3000';
        const customerId = <%= JSON.stringify(customerId) %>;

        const notification = document.getElementById('notification');
        const notificationMessage = document.getElementById('notificationMessage');
        const profileForm = document.getElementById('profileForm');
        const deleteForm = document.getElementById('deleteForm');
        const displayName = document.getElementById('displayName');
        const displayEmail = document.getElementById('displayEmail');
        const displayNumber = document.getElementById('displayNumber');

        function showNotification(message, type = 'success') {
            notificationMessage.textContent = message;
            notification.className = `notification ${type}`;
            notification.style.display = 'block';
            setTimeout(() => {
                notification.style.display = 'none';
            }, 4000);
        }

        async function fetchProfile() {
            try {
                const response = await fetch(`${BASE_URL}/api/customers/${customerId}`, {
                    method: 'GET',
                    credentials: 'include',
                });

                if (!response.ok) throw new Error('Failed to load profile data');

                const data = await response.json();
                displayName.textContent = data.name;
                displayEmail.textContent = data.email;
                displayNumber.textContent = data.number;

                profileForm.name.value = data.name;
                profileForm.email.value = data.email;
                profileForm.number.value = data.number;
            } catch (error) {
                showNotification(error.message, 'error');
            }
        }

        profileForm.addEventListener('submit', async (event) => {
            event.preventDefault();

            const name = profileForm.name.value.trim();
            const email = profileForm.email.value.trim();
            const number = profileForm.number.value.trim();

            try {
                const response = await fetch(`${BASE_URL}/api/customers/${customerId}`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    credentials: 'include',
                    body: JSON.stringify({ name, email, number }),
                });

                if (!response.ok) throw new Error('Failed to update profile');

                displayName.textContent = name;
                displayEmail.textContent = email;
                displayNumber.textContent = number;

                showNotification('Profile updated successfully');
            } catch (error) {
                showNotification(error.message, 'error');
            }
        });

        deleteForm.addEventListener('submit', async (event) => {
            event.preventDefault();

            const password = deleteForm.deletePassword.value.trim();

            try {
                const response = await fetch(`${BASE_URL}/api/customers/${customerId}`, {
                    method: 'DELETE',
                    headers: { 'Content-Type': 'application/json' },
                    credentials: 'include',
                    body: JSON.stringify({ customer_Password: password }),
                });

                if (!response.ok) {
                    const result = await response.json();
                    throw new Error(result.message || 'Failed to delete account');
                }

                showNotification('Account deleted successfully');
                setTimeout(() => (window.location.href = '/'), 3000);
            } catch (error) {
                showNotification(error.message, 'error');
            }
        });

        document.addEventListener('DOMContentLoaded', fetchProfile);
    </script>
</body>
</html>
